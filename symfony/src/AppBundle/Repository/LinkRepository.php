<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Link;
use Doctrine\ORM\EntityRepository;
use XTeam\HighFiveSlackBundle\Entity\DataManipulator\Period;
use XTeam\HighFiveSlackBundle\Statistic\HighFivesCollection;
use XTeam\SlackMessengerBundle\Model\Message;
use XTeam\HighFiveSlackBundle\Statistic\CollectingStrategy\UserCollectingStrategy;

/**
 * LinkRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LinkRepository extends EntityRepository
{
    public function getMatch(Message $message)
    {
        return $this->findOneBy([
            'slackId' => $message->getTs() . $message->getChannel()->getId(),
        ]);
    }

    public function getLastTimeStamp()
    {
        $link = $this->createQueryBuilder('l')
            ->select('l.createdAt')
            ->setMaxResults(1)
            ->orderBy('l.createdAt', 'DESC')
            ->getQuery()
            ->getArrayResult();

        if (empty($link)) {
            return null;
        }

        return $link[0]['createdAt']->getTimestamp();
    }

    public function getLink(Message $message)
    {
        $highFive  = $this->mapHighFive($message);
        $publisher = $this->userEntityBuilder->getUser($message->getUser());
        $channel   = $this->channelEntityBuilder->getChannel($message->getChannel());

        $highFive->setPublisher($publisher);
        $highFive->setChannel($channel);

        return $highFive;
    }

    public function persist(Link $link)
    {
        return $this->getEntityManager()->persist($link);
    }

    public function findUnsent()
    {
        return $this->findBy(['sent' => 0]);
    }
}
